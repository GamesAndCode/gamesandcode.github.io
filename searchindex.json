[{"section":"Blog","slug":"/blog/kenneyjampost/","title":"Kenney Jam recap","description":"blog post about Kenney Jam participation","date":"August 12, 2023","image":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/Blog/KenneyJam/KenneyJamLogo_hu2ae239ad31eb85dc654d6dd34ede7829_9686_420x0_resize_q90_h2_lanczos_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"420\"\n          height=\"158\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/Blog\\/KenneyJam\\/KenneyJamLogo_hu2ae239ad31eb85dc654d6dd34ede7829_9686_420x0_resize_lanczos_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","imageSM":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  \n\n\n\n\n\n  \n\n  \n  \n    \n      \n    \n\n\n    \n    \n\n\n    \n    \n      \n      \n    \n    \n    \n\n\n    \n    \n      \n      \n        \n        \n        \n        \n        \n        \n          \n          \n          \n          \n        \n\n\n        \n        \n\n\n        \u003cimg\n          \n            src=\"/images/Blog/KenneyJam/KenneyJamLogo_hu2ae239ad31eb85dc654d6dd34ede7829_9686_100x100_fill_q90_h2_lanczos_smart1_3.webp\" loading=\"lazy\" decoding=\"async\"\n          \n\n          alt=\"\"\n          class=\"  img\"\n          width=\"100\"\n          height=\"100\"\n          onerror=\"this.onerror='null';this.src='\\/images\\/Blog\\/KenneyJam\\/KenneyJamLogo_hu2ae239ad31eb85dc654d6dd34ede7829_9686_100x100_fill_lanczos_smart1_3.png';\" /\u003e\n\n        \n      \n      \n    \n    \n  \n\n\n  \n","searchKeyword":"","categories":"Game jam, Game development","tags":"unity, code example","content":" Table of Contents Introduction Game concept First day (Basic implementation) Second day (User interface and look) Third day (Itch.io page and polish) Recap Screenshots Bibliography Introduction Programming a game over a long period of time can be very exhausting. Many indie game developers give up their games during the development process. One reason might be, that the games are too big or too complex to be handled solo. Game Jams in contrast, give only a small time period to finish a game. The result might only be a low polished or unfinished game, but there is great potential. Firstly the Game jam forces to think small and not to waste time on every idea, that could be a nice feature. Second, game Jams are a great way to test and enhance your programming and game design skills. Programming is a path of consistent learning. Especially making video games reveals many new aspects to learn every time you do it. Working on a project for a long time sometimes makes you rewrite your initial code because your skills have been already improved again. In conclusion it is sometimes helpful to learn in a smaller project scope. To do that I participated in the KenneyJam 2023. The Jam was 54 hours long and the theme was exploration and was revealed at the start of the jam. An additional restriction was only to use assets from the organisers website (kenney.nl ). In the following I would like to present the work process of the small space game I created during the jam.\nGame concept At the start of jam I first got an overview of the assets. I concluded that using the many space assets will give a lot of possibilities and are fitting to the theme. After that, the most important part began. Developing a game idea and committing to it. The difficulty is to find a simple and fun concept that doesn\u0026rsquo;t take too much time to implement. In the book A Theory of Fun, by Raph Koster, it says that games need to train our brain to be fun. The fun comes from richly interpretable situations ([1] p.38). To achieve this, I wanted to use randomness in my game. I decided to use two resources that the player would have to manage. Each move would cost a same amount of these resources every time he moves. At the same time the player gains some resources back, depending on the path he chooses. In order to avoid boredom, for the same map over and over again, the resource amount is generated with a probability, at the start of each game. The game idea and the basic game mechanics were born. To reduce complexity I decided to make a 2D game. Next I made some drafts with pen and paper and resulted in a map of a hexagon grid. To prepare the code structure I made a small uml class diagram. Programming could begin.\nFirst day (Basic implementation) To generate a hexagon map I followed a great tutorial by Game Dev Guide (Link ) In order to make this functional for my game, I made some adjustments to generate this for a 2D perspective. This took me some time but in the end I had access to the coordinates of each corner of a hexagon. It was time to use some of the Kenney assets and place them on the grid. The result looked like this: On the first day I continued implementing the basic functions. To move the ship, the player has to click on of the neighbouring stars. I decided that every move would cost the player 10 fuel and 5 hull. If one of the resources would reach zero, the game would be over. Each planet will give the player some resources back. The stars have different probabilities to spawn, so that powerful resources are not that common. After adding a user interface, the resource amount was shown, when hovering over the stars. I also added a special star, of which the resources are not shown to the player. It gives either negative or positive stats, based on a coin flip. These risky options give the player the possibility to gamble. At the end of day one the basic game mechanics were finished and the result can be seen in a Twitter post I made that day:\n\u0026lt;blockquote class=\u0026quot;twitter-tweet\u0026quot;\u0026gt;\u0026lt;p lang=\u0026quot;en\u0026quot; dir=\u0026quot;ltr\u0026quot;\u0026gt;I managed to create a simple space travel game for the \u0026lt;a href=\u0026quot;https://twitter.com/hashtag/KenneyJam?src=hash\u0026amp;amp;ref_src=twsrc%5Etfw\u0026quot;\u0026gt;#KenneyJam\u0026lt;/a\u0026gt;. Pretty optimistic about finishing it in time!\u0026lt;a href=\u0026quot;https://twitter.com/hashtag/indiedev?src=hash\u0026amp;amp;ref_src=twsrc%5Etfw\u0026quot;\u0026gt;#indiedev\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026quot;https://twitter.com/hashtag/madewithunity?src=hash\u0026amp;amp;ref_src=twsrc%5Etfw\u0026quot;\u0026gt;#madewithunity\u0026lt;/a\u0026gt; \u0026lt;a href=\u0026quot;https://t.co/9qS2dn8BJZ\u0026quot;\u0026gt;pic.twitter.com/9qS2dn8BJZ\u0026lt;/a\u0026gt;\u0026lt;/p\u0026gt;\u0026amp;mdash; Radiant darkness (@RadiantDrk) \u0026lt;a href=\u0026quot;https://twitter.com/RadiantDrk/status/1682499780780367872?ref_src=twsrc%5Etfw\u0026quot;\u0026gt;July 21, 2023\u0026lt;/a\u0026gt;\u0026lt;/blockquote\u0026gt; \u0026lt;script async src=\u0026quot;https://platform.twitter.com/widgets.js\u0026quot; charset=\u0026quot;utf-8\u0026quot;\u0026gt;\u0026lt;/script\u0026gt;\nSecond day (User interface and look) The second day was about making a better user interface and making the game feel good. For the user interface (UI) I combined some code snippets I already had with game assets from Kenney. This created a spacey looking menu interface. The game assets also include sound effects. I used some of them for the UI buttons and for the movement of the spaceship. I also found some really nice background music at https://opengameart.org/ that added a immersive feeling to the gameplay. For the background I used the unity particle system to spawn some star sprites in front of a background image. After adding these elements the game looked a little bit better. After play testing and resolving some bugs, I realised that the gameplay was fun, but not exciting enough. I had a lot of ideas to spicy things up, but the second day was nearly finished. To get the player to play one than more game I displayed the number of travelled starts, so that there could be a personal highscore. I further give the player a rewarding feeling I needed to add something else. I came up with the idea too show some visual effects, every time the player reaches an specific amount of travelled planets. This was not very complicated and could be implemented fast. I used some more space assets, that would fly slowly through the screen after reaching more and more points. This finished the second day with a solid base gameplay. I still had some more ideas, but I planned to use the third day to upload the game and to create a good looking game page on itch.io.\nThird day (Itch.io page and polish) On the third day I had about eight hours left until the deadline. I took my time for the game page and to check if my WebGL version works correctly. Finishing that I realised I still had some time left. My game architecture allowed me implement another feature without messing up with the old stuff. So I added two more spaceships, the player could unlock by reaching an specific amount of travelled stars. My submission was finished.\nRecap After the submission I played a lot of other jam games. This really highlighted the creativity of the participants in game design and how to use the available assets. I really enjoyed participating at the jam, which was an refreshing alternative to a bigger project.\nScreenshots Bibliography Koster, Raph. Theory of fun for game design. \u0026quot; O\u0026rsquo;Reilly Media, Inc.\u0026quot;, 2013. "}]